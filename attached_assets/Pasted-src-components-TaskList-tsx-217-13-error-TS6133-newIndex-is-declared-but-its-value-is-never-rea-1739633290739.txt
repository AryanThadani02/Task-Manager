src/components/TaskList.tsx:217:13 - error TS6133: 'newIndex' is declared but its value is never read.

217       const newIndex = taskElements.findIndex(el => el.id === `task-${taskId}`);
                ~~~~~~~~

src/components/TaskList.tsx:225:13 - error TS2353: Object literal may only specify known properties, and 'order' does not exist in type 'Task'.

225             order: index
                ~~~~~

src/components/TaskList.tsx:233:53 - error TS2339: Property 'selected' does not exist on type 'Task'.

233     const selectedTasks = tasks.filter(task => task.selected);
                                                        ~~~~~~~~

src/components/TaskList.tsx:235:27 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

235       dispatch(deleteTask(task.id));
                              ~~~~~~~

src/components/TaskList.tsx:239:16 - error TS2339: Property 'selected' does not exist on type 'Task'.

239       if (task.selected) {
                   ~~~~~~~~

src/components/TaskList.tsx:240:40 - error TS2353: Object literal may only specify known properties, and 'selected' does not exist in type 'Task'.

240         dispatch(updateTask({ ...task, selected: false }));
                                           ~~~~~~~~

src/components/TaskList.tsx:246:53 - error TS2339: Property 'selected' does not exist on type 'Task'.

246     const selectedTasks = tasks.filter(task => task.selected);
                                                        ~~~~~~~~

src/components/TaskList.tsx:251:9 - error TS2353: Object literal may only specify known properties, and 'completed' does not exist in type 'Task'.

251         completed: newStatus === "Completed",
            ~~~~~~~~~

src/components/TaskList.tsx:271:34 - error TS2339: Property 'selected' does not exist on type 'Task'.

271         {tasks.some(task => task.selected) && (
                                     ~~~~~~~~

src/components/TaskList.tsx:274:42 - error TS2339: Property 'selected' does not exist on type 'Task'.

274               {tasks.filter(task => task.selected).length} Tasks Selected
                                             ~~~~~~~~

src/components/TaskList.tsx:308:63 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

308                 todoTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                  ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'

src/components/TaskList.tsx:325:69 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

325                 inProgressTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                        ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'

src/components/TaskList.tsx:342:68 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

342                 completedTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                       ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'