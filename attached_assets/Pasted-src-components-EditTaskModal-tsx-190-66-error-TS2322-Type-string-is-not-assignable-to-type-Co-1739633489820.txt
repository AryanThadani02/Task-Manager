src/components/EditTaskModal.tsx:190:66 - error TS2322: Type 'string' is not assignable to type '"Completed" | "Todo" | "In Progress"'.

190                   onChange={(e) => setEditedTask({...editedTask, status: e.target.value})}
                                                                     ~~~~~~

src/components/HomePage.tsx:23:16 - error TS2345: Argument of type 'AsyncThunkAction<Task[], string, AsyncThunkConfig>' is not assignable to parameter of type 'UnknownAction'.

23       dispatch(fetchTasks(user.uid));
                  ~~~~~~~~~~~~~~~~~~~~

src/components/TaskList.tsx:35:36 - error TS2353: Object literal may only specify known properties, and 'selected' does not exist in type 'Task'.

35     dispatch(updateTask({ ...task, selected: e.target.checked }));
                                      ~~~~~~~~

src/components/TaskList.tsx:55:7 - error TS2353: Object literal may only specify known properties, and 'completed' does not exist in type 'Task'.

55       completed: newStatus === "Completed",
         ~~~~~~~~~

src/components/TaskList.tsx:93:15 - error TS2353: Object literal may only specify known properties, and 'completed' does not exist in type 'Task'.

93               completed: isCompleted,
                 ~~~~~~~~~

src/components/TaskList.tsx:173:53 - error TS2339: Property 'category' does not exist on type 'Task'.

173     const matchesCategory = !categoryFilter || task.category === categoryFilter;
                                                        ~~~~~~~~

src/components/TaskList.tsx:174:51 - error TS2339: Property 'dueDate' does not exist on type 'Task'.

174     const matchesDueDate = !dueDateFilter || task.dueDate === dueDateFilter;
                                                      ~~~~~~~

src/components/TaskList.tsx:216:53 - error TS2339: Property 'selected' does not exist on type 'Task'.

216     const selectedTasks = tasks.filter(task => task.selected);
                                                        ~~~~~~~~

src/components/TaskList.tsx:224:16 - error TS2339: Property 'selected' does not exist on type 'Task'.

224       if (task.selected) {
                   ~~~~~~~~

src/components/TaskList.tsx:231:53 - error TS2339: Property 'selected' does not exist on type 'Task'.

231     const selectedTasks = tasks.filter(task => task.selected);
                                                        ~~~~~~~~

src/components/TaskList.tsx:236:9 - error TS2353: Object literal may only specify known properties, and 'completed' does not exist in type 'Task'.

236         completed: newStatus === "Completed",
            ~~~~~~~~~

src/components/TaskList.tsx:256:34 - error TS2339: Property 'selected' does not exist on type 'Task'.

256         {tasks.some(task => task.selected) && (
                                     ~~~~~~~~

src/components/TaskList.tsx:259:42 - error TS2339: Property 'selected' does not exist on type 'Task'.

259               {tasks.filter(task => task.selected).length} Tasks Selected
                                             ~~~~~~~~

src/components/TaskList.tsx:293:63 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

293                 todoTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                  ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'

src/components/TaskList.tsx:310:69 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

310                 inProgressTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                        ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'

src/components/TaskList.tsx:327:68 - error TS2739: Type 'Task' is missing the following properties from type 'Task': category, dueDate

327                 completedTasks.map(task => <TaskCard key={task.id} task={task} />)
                                                                       ~~~~

  src/components/TaskList.tsx:9:31
    9 const TaskCard = ({ task }: { task: Task }) => {
                                    ~~~~
    The expected type comes from property 'task' which is declared here on type 'IntrinsicAttributes & { task: Task; }'